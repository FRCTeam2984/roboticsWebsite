{"version":3,"sources":["webpack:///./src/components/markdownTemplate.js"],"names":["Template","markdownRemark","data","frontmatter","html","styles","css","colors","red","darkred","title","style","marginTop","marginBottom","minHeight","dangerouslySetInnerHTML","__html"],"mappings":"2FAAA,gJASe,SAASA,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,8BACE,YAAC,IAAD,CACEC,OAAQC,YAAF,gBAEOC,IAAOC,IAFd,uDAOOD,IAAOE,QAPd,gFAiBR,YAAC,IAAD,CAAKC,MAAOP,EAAYO,QACxB,YAAC,IAAD,MACA,YAAC,IAAD,KACE,oBACEC,MAAO,CACLC,UAAW,QACXC,aAAc,OACdC,UAAW,wBAGb,sBAAKX,EAAYO,OACjB,mBAAKK,wBAAyB,CAAEC,OAAQZ,OAG5C,YAAC,IAAD","file":"component---src-components-markdown-template-js-c98e0a964ff1771b7192.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Container from \"./container\"\nimport Navbar from \"./Header/navbar\"\nimport Footer from \"./Footer/footer\"\nimport SEO from \"./seo\"\nimport { Global, css } from \"@emotion/core\"\nimport { colors } from \"./theme\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <>\n      <Global\n        styles={css`\n          main a {\n            color: ${colors.red};\n            transition: color 0.1s ease-out;\n          }\n\n          main a:hover {\n            color: ${colors.darkred};\n            cursor: pointer;\n            text-decoration: underline;\n          }\n\n          main img {\n            padding-bottom: 0.5em;\n          }\n        `}\n      ></Global>\n      <SEO title={frontmatter.title} />\n      <Navbar />\n      <Container>\n        <main\n          style={{\n            marginTop: \"100px\",\n            marginBottom: \"50px\",\n            minHeight: \"calc(100vh - 355px)\",\n          }}\n        >\n          <h1>{frontmatter.title}</h1>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </main>\n      </Container>\n      <Footer />\n    </>\n  )\n}\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}